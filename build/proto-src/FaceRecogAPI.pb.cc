// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FaceRecogAPI.proto

#include "FaceRecogAPI.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoundingBox;
}  // namespace protobuf_common_2eproto
namespace facerecog {
class faceRecogUploadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<faceRecogUploadRequest>
      _instance;
} _faceRecogUploadRequest_default_instance_;
class faceRecogUploadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<faceRecogUploadResponse>
      _instance;
} _faceRecogUploadResponse_default_instance_;
class faceRecogRealtimeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<faceRecogRealtimeRequest>
      _instance;
} _faceRecogRealtimeRequest_default_instance_;
class faceRecogRealtimeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<faceRecogRealtimeResponse>
      _instance;
} _faceRecogRealtimeResponse_default_instance_;
class faceRecogHistoryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<faceRecogHistoryRequest>
      _instance;
} _faceRecogHistoryRequest_default_instance_;
class faceRecogHistoryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<faceRecogHistoryResponse>
      _instance;
} _faceRecogHistoryResponse_default_instance_;
}  // namespace facerecog
namespace protobuf_FaceRecogAPI_2eproto {
static void InitDefaultsfaceRecogUploadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::facerecog::_faceRecogUploadRequest_default_instance_;
    new (ptr) ::facerecog::faceRecogUploadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::facerecog::faceRecogUploadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_faceRecogUploadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfaceRecogUploadRequest}, {}};

static void InitDefaultsfaceRecogUploadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::facerecog::_faceRecogUploadResponse_default_instance_;
    new (ptr) ::facerecog::faceRecogUploadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::facerecog::faceRecogUploadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_faceRecogUploadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfaceRecogUploadResponse}, {}};

static void InitDefaultsfaceRecogRealtimeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::facerecog::_faceRecogRealtimeRequest_default_instance_;
    new (ptr) ::facerecog::faceRecogRealtimeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::facerecog::faceRecogRealtimeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_faceRecogRealtimeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfaceRecogRealtimeRequest}, {}};

static void InitDefaultsfaceRecogRealtimeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::facerecog::_faceRecogRealtimeResponse_default_instance_;
    new (ptr) ::facerecog::faceRecogRealtimeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::facerecog::faceRecogRealtimeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_faceRecogRealtimeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsfaceRecogRealtimeResponse}, {
      &protobuf_common_2eproto::scc_info_BoundingBox.base,}};

static void InitDefaultsfaceRecogHistoryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::facerecog::_faceRecogHistoryRequest_default_instance_;
    new (ptr) ::facerecog::faceRecogHistoryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::facerecog::faceRecogHistoryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_faceRecogHistoryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfaceRecogHistoryRequest}, {}};

static void InitDefaultsfaceRecogHistoryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::facerecog::_faceRecogHistoryResponse_default_instance_;
    new (ptr) ::facerecog::faceRecogHistoryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::facerecog::faceRecogHistoryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_faceRecogHistoryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfaceRecogHistoryResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_faceRecogUploadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_faceRecogUploadResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_faceRecogRealtimeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_faceRecogRealtimeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_faceRecogHistoryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_faceRecogHistoryResponse.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogUploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogUploadRequest, rawdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogUploadRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogUploadRequest, hight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogUploadRequest, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogUploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogUploadResponse, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogRealtimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogRealtimeRequest, rawdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogRealtimeRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogRealtimeRequest, hight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogRealtimeRequest, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogRealtimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogRealtimeResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogRealtimeResponse, facerect_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogHistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogHistoryRequest, imagepath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::facerecog::faceRecogHistoryResponse, index_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::facerecog::faceRecogUploadRequest)},
  { 9, -1, sizeof(::facerecog::faceRecogUploadResponse)},
  { 15, -1, sizeof(::facerecog::faceRecogRealtimeRequest)},
  { 24, -1, sizeof(::facerecog::faceRecogRealtimeResponse)},
  { 31, -1, sizeof(::facerecog::faceRecogHistoryRequest)},
  { 37, -1, sizeof(::facerecog::faceRecogHistoryResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::facerecog::_faceRecogUploadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::facerecog::_faceRecogUploadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::facerecog::_faceRecogRealtimeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::facerecog::_faceRecogRealtimeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::facerecog::_faceRecogHistoryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::facerecog::_faceRecogHistoryResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FaceRecogAPI.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022FaceRecogAPI.proto\022\tfacerecog\032\014common."
      "proto\"X\n\026faceRecogUploadRequest\022\017\n\007rawDa"
      "ta\030\001 \001(\014\022\r\n\005Width\030\002 \001(\005\022\r\n\005Hight\030\003 \001(\005\022\017"
      "\n\007Channel\030\004 \001(\005\")\n\027faceRecogUploadRespon"
      "se\022\016\n\006status\030\001 \001(\005\"Z\n\030faceRecogRealtimeR"
      "equest\022\017\n\007rawData\030\001 \001(\014\022\r\n\005Width\030\002 \001(\005\022\r"
      "\n\005Hight\030\003 \001(\005\022\017\n\007Channel\030\004 \001(\005\"R\n\031faceRe"
      "cogRealtimeResponse\022\016\n\006status\030\001 \003(\005\022%\n\010f"
      "aceRect\030\002 \003(\0132\023.common.BoundingBox\",\n\027fa"
      "ceRecogHistoryRequest\022\021\n\timagePath\030\001 \003(\t"
      "\")\n\030faceRecogHistoryResponse\022\r\n\005index\030\001 "
      "\003(\0052\253\002\n\014FaceRecogAPI\022Z\n\017faceRecogUpload\022"
      "!.facerecog.faceRecogUploadRequest\032\".fac"
      "erecog.faceRecogUploadResponse\"\000\022`\n\021face"
      "RecogRealtime\022#.facerecog.faceRecogRealt"
      "imeRequest\032$.facerecog.faceRecogRealtime"
      "Response\"\000\022]\n\020faceRecogHistory\022\".facerec"
      "og.faceRecogHistoryRequest\032#.facerecog.f"
      "aceRecogHistoryResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 753);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FaceRecogAPI.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FaceRecogAPI_2eproto
namespace facerecog {

// ===================================================================

void faceRecogUploadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int faceRecogUploadRequest::kRawDataFieldNumber;
const int faceRecogUploadRequest::kWidthFieldNumber;
const int faceRecogUploadRequest::kHightFieldNumber;
const int faceRecogUploadRequest::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

faceRecogUploadRequest::faceRecogUploadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogUploadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:facerecog.faceRecogUploadRequest)
}
faceRecogUploadRequest::faceRecogUploadRequest(const faceRecogUploadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rawdata().size() > 0) {
    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&width_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:facerecog.faceRecogUploadRequest)
}

void faceRecogUploadRequest::SharedCtor() {
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&width_)) + sizeof(channel_));
}

faceRecogUploadRequest::~faceRecogUploadRequest() {
  // @@protoc_insertion_point(destructor:facerecog.faceRecogUploadRequest)
  SharedDtor();
}

void faceRecogUploadRequest::SharedDtor() {
  rawdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void faceRecogUploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* faceRecogUploadRequest::descriptor() {
  ::protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const faceRecogUploadRequest& faceRecogUploadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogUploadRequest.base);
  return *internal_default_instance();
}


void faceRecogUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:facerecog.faceRecogUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rawdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&width_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool faceRecogUploadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:facerecog.faceRecogUploadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes rawData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rawdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:facerecog.faceRecogUploadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:facerecog.faceRecogUploadRequest)
  return false;
#undef DO_
}

void faceRecogUploadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:facerecog.faceRecogUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes rawData = 1;
  if (this->rawdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->rawdata(), output);
  }

  // int32 Width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 Hight = 3;
  if (this->hight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hight(), output);
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:facerecog.faceRecogUploadRequest)
}

::google::protobuf::uint8* faceRecogUploadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:facerecog.faceRecogUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes rawData = 1;
  if (this->rawdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->rawdata(), target);
  }

  // int32 Width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 Hight = 3;
  if (this->hight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hight(), target);
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:facerecog.faceRecogUploadRequest)
  return target;
}

size_t faceRecogUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:facerecog.faceRecogUploadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes rawData = 1;
  if (this->rawdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rawdata());
  }

  // int32 Width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 Hight = 3;
  if (this->hight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hight());
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void faceRecogUploadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:facerecog.faceRecogUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const faceRecogUploadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const faceRecogUploadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:facerecog.faceRecogUploadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:facerecog.faceRecogUploadRequest)
    MergeFrom(*source);
  }
}

void faceRecogUploadRequest::MergeFrom(const faceRecogUploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:facerecog.faceRecogUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rawdata().size() > 0) {

    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.hight() != 0) {
    set_hight(from.hight());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void faceRecogUploadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:facerecog.faceRecogUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void faceRecogUploadRequest::CopyFrom(const faceRecogUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:facerecog.faceRecogUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool faceRecogUploadRequest::IsInitialized() const {
  return true;
}

void faceRecogUploadRequest::Swap(faceRecogUploadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void faceRecogUploadRequest::InternalSwap(faceRecogUploadRequest* other) {
  using std::swap;
  rawdata_.Swap(&other->rawdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(hight_, other->hight_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata faceRecogUploadRequest::GetMetadata() const {
  protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void faceRecogUploadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int faceRecogUploadResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

faceRecogUploadResponse::faceRecogUploadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogUploadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:facerecog.faceRecogUploadResponse)
}
faceRecogUploadResponse::faceRecogUploadResponse(const faceRecogUploadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:facerecog.faceRecogUploadResponse)
}

void faceRecogUploadResponse::SharedCtor() {
  status_ = 0;
}

faceRecogUploadResponse::~faceRecogUploadResponse() {
  // @@protoc_insertion_point(destructor:facerecog.faceRecogUploadResponse)
  SharedDtor();
}

void faceRecogUploadResponse::SharedDtor() {
}

void faceRecogUploadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* faceRecogUploadResponse::descriptor() {
  ::protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const faceRecogUploadResponse& faceRecogUploadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogUploadResponse.base);
  return *internal_default_instance();
}


void faceRecogUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:facerecog.faceRecogUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

bool faceRecogUploadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:facerecog.faceRecogUploadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:facerecog.faceRecogUploadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:facerecog.faceRecogUploadResponse)
  return false;
#undef DO_
}

void faceRecogUploadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:facerecog.faceRecogUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:facerecog.faceRecogUploadResponse)
}

::google::protobuf::uint8* faceRecogUploadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:facerecog.faceRecogUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:facerecog.faceRecogUploadResponse)
  return target;
}

size_t faceRecogUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:facerecog.faceRecogUploadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void faceRecogUploadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:facerecog.faceRecogUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const faceRecogUploadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const faceRecogUploadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:facerecog.faceRecogUploadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:facerecog.faceRecogUploadResponse)
    MergeFrom(*source);
  }
}

void faceRecogUploadResponse::MergeFrom(const faceRecogUploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:facerecog.faceRecogUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void faceRecogUploadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:facerecog.faceRecogUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void faceRecogUploadResponse::CopyFrom(const faceRecogUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:facerecog.faceRecogUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool faceRecogUploadResponse::IsInitialized() const {
  return true;
}

void faceRecogUploadResponse::Swap(faceRecogUploadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void faceRecogUploadResponse::InternalSwap(faceRecogUploadResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata faceRecogUploadResponse::GetMetadata() const {
  protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void faceRecogRealtimeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int faceRecogRealtimeRequest::kRawDataFieldNumber;
const int faceRecogRealtimeRequest::kWidthFieldNumber;
const int faceRecogRealtimeRequest::kHightFieldNumber;
const int faceRecogRealtimeRequest::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

faceRecogRealtimeRequest::faceRecogRealtimeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogRealtimeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:facerecog.faceRecogRealtimeRequest)
}
faceRecogRealtimeRequest::faceRecogRealtimeRequest(const faceRecogRealtimeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rawdata().size() > 0) {
    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&width_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:facerecog.faceRecogRealtimeRequest)
}

void faceRecogRealtimeRequest::SharedCtor() {
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&width_)) + sizeof(channel_));
}

faceRecogRealtimeRequest::~faceRecogRealtimeRequest() {
  // @@protoc_insertion_point(destructor:facerecog.faceRecogRealtimeRequest)
  SharedDtor();
}

void faceRecogRealtimeRequest::SharedDtor() {
  rawdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void faceRecogRealtimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* faceRecogRealtimeRequest::descriptor() {
  ::protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const faceRecogRealtimeRequest& faceRecogRealtimeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogRealtimeRequest.base);
  return *internal_default_instance();
}


void faceRecogRealtimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:facerecog.faceRecogRealtimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rawdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&width_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool faceRecogRealtimeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:facerecog.faceRecogRealtimeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes rawData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rawdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:facerecog.faceRecogRealtimeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:facerecog.faceRecogRealtimeRequest)
  return false;
#undef DO_
}

void faceRecogRealtimeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:facerecog.faceRecogRealtimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes rawData = 1;
  if (this->rawdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->rawdata(), output);
  }

  // int32 Width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 Hight = 3;
  if (this->hight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hight(), output);
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:facerecog.faceRecogRealtimeRequest)
}

::google::protobuf::uint8* faceRecogRealtimeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:facerecog.faceRecogRealtimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes rawData = 1;
  if (this->rawdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->rawdata(), target);
  }

  // int32 Width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 Hight = 3;
  if (this->hight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hight(), target);
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:facerecog.faceRecogRealtimeRequest)
  return target;
}

size_t faceRecogRealtimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:facerecog.faceRecogRealtimeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes rawData = 1;
  if (this->rawdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rawdata());
  }

  // int32 Width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 Hight = 3;
  if (this->hight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hight());
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void faceRecogRealtimeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:facerecog.faceRecogRealtimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const faceRecogRealtimeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const faceRecogRealtimeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:facerecog.faceRecogRealtimeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:facerecog.faceRecogRealtimeRequest)
    MergeFrom(*source);
  }
}

void faceRecogRealtimeRequest::MergeFrom(const faceRecogRealtimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:facerecog.faceRecogRealtimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rawdata().size() > 0) {

    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.hight() != 0) {
    set_hight(from.hight());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void faceRecogRealtimeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:facerecog.faceRecogRealtimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void faceRecogRealtimeRequest::CopyFrom(const faceRecogRealtimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:facerecog.faceRecogRealtimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool faceRecogRealtimeRequest::IsInitialized() const {
  return true;
}

void faceRecogRealtimeRequest::Swap(faceRecogRealtimeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void faceRecogRealtimeRequest::InternalSwap(faceRecogRealtimeRequest* other) {
  using std::swap;
  rawdata_.Swap(&other->rawdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(hight_, other->hight_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata faceRecogRealtimeRequest::GetMetadata() const {
  protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void faceRecogRealtimeResponse::InitAsDefaultInstance() {
}
void faceRecogRealtimeResponse::clear_facerect() {
  facerect_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int faceRecogRealtimeResponse::kStatusFieldNumber;
const int faceRecogRealtimeResponse::kFaceRectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

faceRecogRealtimeResponse::faceRecogRealtimeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogRealtimeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:facerecog.faceRecogRealtimeResponse)
}
faceRecogRealtimeResponse::faceRecogRealtimeResponse(const faceRecogRealtimeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      status_(from.status_),
      facerect_(from.facerect_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:facerecog.faceRecogRealtimeResponse)
}

void faceRecogRealtimeResponse::SharedCtor() {
}

faceRecogRealtimeResponse::~faceRecogRealtimeResponse() {
  // @@protoc_insertion_point(destructor:facerecog.faceRecogRealtimeResponse)
  SharedDtor();
}

void faceRecogRealtimeResponse::SharedDtor() {
}

void faceRecogRealtimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* faceRecogRealtimeResponse::descriptor() {
  ::protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const faceRecogRealtimeResponse& faceRecogRealtimeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogRealtimeResponse.base);
  return *internal_default_instance();
}


void faceRecogRealtimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:facerecog.faceRecogRealtimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  facerect_.Clear();
  _internal_metadata_.Clear();
}

bool faceRecogRealtimeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:facerecog.faceRecogRealtimeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_status())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_status())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.BoundingBox faceRect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_facerect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:facerecog.faceRecogRealtimeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:facerecog.faceRecogRealtimeResponse)
  return false;
#undef DO_
}

void faceRecogRealtimeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:facerecog.faceRecogRealtimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 status = 1;
  if (this->status_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _status_cached_byte_size_));
  }
  for (int i = 0, n = this->status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->status(i), output);
  }

  // repeated .common.BoundingBox faceRect = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->facerect_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->facerect(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:facerecog.faceRecogRealtimeResponse)
}

::google::protobuf::uint8* faceRecogRealtimeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:facerecog.faceRecogRealtimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 status = 1;
  if (this->status_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _status_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->status_, target);
  }

  // repeated .common.BoundingBox faceRect = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->facerect_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->facerect(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:facerecog.faceRecogRealtimeResponse)
  return target;
}

size_t faceRecogRealtimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:facerecog.faceRecogRealtimeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 status = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->status_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _status_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .common.BoundingBox faceRect = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->facerect_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->facerect(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void faceRecogRealtimeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:facerecog.faceRecogRealtimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const faceRecogRealtimeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const faceRecogRealtimeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:facerecog.faceRecogRealtimeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:facerecog.faceRecogRealtimeResponse)
    MergeFrom(*source);
  }
}

void faceRecogRealtimeResponse::MergeFrom(const faceRecogRealtimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:facerecog.faceRecogRealtimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  facerect_.MergeFrom(from.facerect_);
}

void faceRecogRealtimeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:facerecog.faceRecogRealtimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void faceRecogRealtimeResponse::CopyFrom(const faceRecogRealtimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:facerecog.faceRecogRealtimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool faceRecogRealtimeResponse::IsInitialized() const {
  return true;
}

void faceRecogRealtimeResponse::Swap(faceRecogRealtimeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void faceRecogRealtimeResponse::InternalSwap(faceRecogRealtimeResponse* other) {
  using std::swap;
  status_.InternalSwap(&other->status_);
  CastToBase(&facerect_)->InternalSwap(CastToBase(&other->facerect_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata faceRecogRealtimeResponse::GetMetadata() const {
  protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void faceRecogHistoryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int faceRecogHistoryRequest::kImagePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

faceRecogHistoryRequest::faceRecogHistoryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogHistoryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:facerecog.faceRecogHistoryRequest)
}
faceRecogHistoryRequest::faceRecogHistoryRequest(const faceRecogHistoryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      imagepath_(from.imagepath_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:facerecog.faceRecogHistoryRequest)
}

void faceRecogHistoryRequest::SharedCtor() {
}

faceRecogHistoryRequest::~faceRecogHistoryRequest() {
  // @@protoc_insertion_point(destructor:facerecog.faceRecogHistoryRequest)
  SharedDtor();
}

void faceRecogHistoryRequest::SharedDtor() {
}

void faceRecogHistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* faceRecogHistoryRequest::descriptor() {
  ::protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const faceRecogHistoryRequest& faceRecogHistoryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogHistoryRequest.base);
  return *internal_default_instance();
}


void faceRecogHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:facerecog.faceRecogHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imagepath_.Clear();
  _internal_metadata_.Clear();
}

bool faceRecogHistoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:facerecog.faceRecogHistoryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string imagePath = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_imagepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imagepath(this->imagepath_size() - 1).data(),
            static_cast<int>(this->imagepath(this->imagepath_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "facerecog.faceRecogHistoryRequest.imagePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:facerecog.faceRecogHistoryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:facerecog.faceRecogHistoryRequest)
  return false;
#undef DO_
}

void faceRecogHistoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:facerecog.faceRecogHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string imagePath = 1;
  for (int i = 0, n = this->imagepath_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagepath(i).data(), static_cast<int>(this->imagepath(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "facerecog.faceRecogHistoryRequest.imagePath");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->imagepath(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:facerecog.faceRecogHistoryRequest)
}

::google::protobuf::uint8* faceRecogHistoryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:facerecog.faceRecogHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string imagePath = 1;
  for (int i = 0, n = this->imagepath_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagepath(i).data(), static_cast<int>(this->imagepath(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "facerecog.faceRecogHistoryRequest.imagePath");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->imagepath(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:facerecog.faceRecogHistoryRequest)
  return target;
}

size_t faceRecogHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:facerecog.faceRecogHistoryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string imagePath = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->imagepath_size());
  for (int i = 0, n = this->imagepath_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->imagepath(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void faceRecogHistoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:facerecog.faceRecogHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const faceRecogHistoryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const faceRecogHistoryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:facerecog.faceRecogHistoryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:facerecog.faceRecogHistoryRequest)
    MergeFrom(*source);
  }
}

void faceRecogHistoryRequest::MergeFrom(const faceRecogHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:facerecog.faceRecogHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  imagepath_.MergeFrom(from.imagepath_);
}

void faceRecogHistoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:facerecog.faceRecogHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void faceRecogHistoryRequest::CopyFrom(const faceRecogHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:facerecog.faceRecogHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool faceRecogHistoryRequest::IsInitialized() const {
  return true;
}

void faceRecogHistoryRequest::Swap(faceRecogHistoryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void faceRecogHistoryRequest::InternalSwap(faceRecogHistoryRequest* other) {
  using std::swap;
  imagepath_.InternalSwap(CastToBase(&other->imagepath_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata faceRecogHistoryRequest::GetMetadata() const {
  protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void faceRecogHistoryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int faceRecogHistoryResponse::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

faceRecogHistoryResponse::faceRecogHistoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogHistoryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:facerecog.faceRecogHistoryResponse)
}
faceRecogHistoryResponse::faceRecogHistoryResponse(const faceRecogHistoryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      index_(from.index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:facerecog.faceRecogHistoryResponse)
}

void faceRecogHistoryResponse::SharedCtor() {
}

faceRecogHistoryResponse::~faceRecogHistoryResponse() {
  // @@protoc_insertion_point(destructor:facerecog.faceRecogHistoryResponse)
  SharedDtor();
}

void faceRecogHistoryResponse::SharedDtor() {
}

void faceRecogHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* faceRecogHistoryResponse::descriptor() {
  ::protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const faceRecogHistoryResponse& faceRecogHistoryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FaceRecogAPI_2eproto::scc_info_faceRecogHistoryResponse.base);
  return *internal_default_instance();
}


void faceRecogHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:facerecog.faceRecogHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_.Clear();
  _internal_metadata_.Clear();
}

bool faceRecogHistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:facerecog.faceRecogHistoryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:facerecog.faceRecogHistoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:facerecog.faceRecogHistoryResponse)
  return false;
#undef DO_
}

void faceRecogHistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:facerecog.faceRecogHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 index = 1;
  if (this->index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _index_cached_byte_size_));
  }
  for (int i = 0, n = this->index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->index(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:facerecog.faceRecogHistoryResponse)
}

::google::protobuf::uint8* faceRecogHistoryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:facerecog.faceRecogHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 index = 1;
  if (this->index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->index_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:facerecog.faceRecogHistoryResponse)
  return target;
}

size_t faceRecogHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:facerecog.faceRecogHistoryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 index = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void faceRecogHistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:facerecog.faceRecogHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const faceRecogHistoryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const faceRecogHistoryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:facerecog.faceRecogHistoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:facerecog.faceRecogHistoryResponse)
    MergeFrom(*source);
  }
}

void faceRecogHistoryResponse::MergeFrom(const faceRecogHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:facerecog.faceRecogHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  index_.MergeFrom(from.index_);
}

void faceRecogHistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:facerecog.faceRecogHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void faceRecogHistoryResponse::CopyFrom(const faceRecogHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:facerecog.faceRecogHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool faceRecogHistoryResponse::IsInitialized() const {
  return true;
}

void faceRecogHistoryResponse::Swap(faceRecogHistoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void faceRecogHistoryResponse::InternalSwap(faceRecogHistoryResponse* other) {
  using std::swap;
  index_.InternalSwap(&other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata faceRecogHistoryResponse::GetMetadata() const {
  protobuf_FaceRecogAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceRecogAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace facerecog
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::facerecog::faceRecogUploadRequest* Arena::CreateMaybeMessage< ::facerecog::faceRecogUploadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::facerecog::faceRecogUploadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::facerecog::faceRecogUploadResponse* Arena::CreateMaybeMessage< ::facerecog::faceRecogUploadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::facerecog::faceRecogUploadResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::facerecog::faceRecogRealtimeRequest* Arena::CreateMaybeMessage< ::facerecog::faceRecogRealtimeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::facerecog::faceRecogRealtimeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::facerecog::faceRecogRealtimeResponse* Arena::CreateMaybeMessage< ::facerecog::faceRecogRealtimeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::facerecog::faceRecogRealtimeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::facerecog::faceRecogHistoryRequest* Arena::CreateMaybeMessage< ::facerecog::faceRecogHistoryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::facerecog::faceRecogHistoryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::facerecog::faceRecogHistoryResponse* Arena::CreateMaybeMessage< ::facerecog::faceRecogHistoryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::facerecog::faceRecogHistoryResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
