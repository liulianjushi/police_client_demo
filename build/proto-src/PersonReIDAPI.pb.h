// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PersonReIDAPI.proto

#ifndef PROTOBUF_INCLUDED_PersonReIDAPI_2eproto
#define PROTOBUF_INCLUDED_PersonReIDAPI_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_PersonReIDAPI_2eproto 

namespace protobuf_PersonReIDAPI_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_PersonReIDAPI_2eproto
namespace personreid {
class personReIDHistoryRequest;
class personReIDHistoryRequestDefaultTypeInternal;
extern personReIDHistoryRequestDefaultTypeInternal _personReIDHistoryRequest_default_instance_;
class personReIDHistoryResponse;
class personReIDHistoryResponseDefaultTypeInternal;
extern personReIDHistoryResponseDefaultTypeInternal _personReIDHistoryResponse_default_instance_;
class personReIDRealtimeRequest;
class personReIDRealtimeRequestDefaultTypeInternal;
extern personReIDRealtimeRequestDefaultTypeInternal _personReIDRealtimeRequest_default_instance_;
class personReIDRealtimeResponse;
class personReIDRealtimeResponseDefaultTypeInternal;
extern personReIDRealtimeResponseDefaultTypeInternal _personReIDRealtimeResponse_default_instance_;
class personReIDUploadRequest;
class personReIDUploadRequestDefaultTypeInternal;
extern personReIDUploadRequestDefaultTypeInternal _personReIDUploadRequest_default_instance_;
class personReIDUploadResponse;
class personReIDUploadResponseDefaultTypeInternal;
extern personReIDUploadResponseDefaultTypeInternal _personReIDUploadResponse_default_instance_;
}  // namespace personreid
namespace google {
namespace protobuf {
template<> ::personreid::personReIDHistoryRequest* Arena::CreateMaybeMessage<::personreid::personReIDHistoryRequest>(Arena*);
template<> ::personreid::personReIDHistoryResponse* Arena::CreateMaybeMessage<::personreid::personReIDHistoryResponse>(Arena*);
template<> ::personreid::personReIDRealtimeRequest* Arena::CreateMaybeMessage<::personreid::personReIDRealtimeRequest>(Arena*);
template<> ::personreid::personReIDRealtimeResponse* Arena::CreateMaybeMessage<::personreid::personReIDRealtimeResponse>(Arena*);
template<> ::personreid::personReIDUploadRequest* Arena::CreateMaybeMessage<::personreid::personReIDUploadRequest>(Arena*);
template<> ::personreid::personReIDUploadResponse* Arena::CreateMaybeMessage<::personreid::personReIDUploadResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace personreid {

// ===================================================================

class personReIDUploadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personreid.personReIDUploadRequest) */ {
 public:
  personReIDUploadRequest();
  virtual ~personReIDUploadRequest();

  personReIDUploadRequest(const personReIDUploadRequest& from);

  inline personReIDUploadRequest& operator=(const personReIDUploadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  personReIDUploadRequest(personReIDUploadRequest&& from) noexcept
    : personReIDUploadRequest() {
    *this = ::std::move(from);
  }

  inline personReIDUploadRequest& operator=(personReIDUploadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const personReIDUploadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const personReIDUploadRequest* internal_default_instance() {
    return reinterpret_cast<const personReIDUploadRequest*>(
               &_personReIDUploadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(personReIDUploadRequest* other);
  friend void swap(personReIDUploadRequest& a, personReIDUploadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline personReIDUploadRequest* New() const final {
    return CreateMaybeMessage<personReIDUploadRequest>(NULL);
  }

  personReIDUploadRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<personReIDUploadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const personReIDUploadRequest& from);
  void MergeFrom(const personReIDUploadRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(personReIDUploadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes rawdata = 1;
  void clear_rawdata();
  static const int kRawdataFieldNumber = 1;
  const ::std::string& rawdata() const;
  void set_rawdata(const ::std::string& value);
  #if LANG_CXX11
  void set_rawdata(::std::string&& value);
  #endif
  void set_rawdata(const char* value);
  void set_rawdata(const void* value, size_t size);
  ::std::string* mutable_rawdata();
  ::std::string* release_rawdata();
  void set_allocated_rawdata(::std::string* rawdata);

  // int32 Width = 2;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 Hight = 3;
  void clear_hight();
  static const int kHightFieldNumber = 3;
  ::google::protobuf::int32 hight() const;
  void set_hight(::google::protobuf::int32 value);

  // int32 Channel = 4;
  void clear_channel();
  static const int kChannelFieldNumber = 4;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personreid.personReIDUploadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr rawdata_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 hight_;
  ::google::protobuf::int32 channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PersonReIDAPI_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class personReIDUploadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personreid.personReIDUploadResponse) */ {
 public:
  personReIDUploadResponse();
  virtual ~personReIDUploadResponse();

  personReIDUploadResponse(const personReIDUploadResponse& from);

  inline personReIDUploadResponse& operator=(const personReIDUploadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  personReIDUploadResponse(personReIDUploadResponse&& from) noexcept
    : personReIDUploadResponse() {
    *this = ::std::move(from);
  }

  inline personReIDUploadResponse& operator=(personReIDUploadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const personReIDUploadResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const personReIDUploadResponse* internal_default_instance() {
    return reinterpret_cast<const personReIDUploadResponse*>(
               &_personReIDUploadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(personReIDUploadResponse* other);
  friend void swap(personReIDUploadResponse& a, personReIDUploadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline personReIDUploadResponse* New() const final {
    return CreateMaybeMessage<personReIDUploadResponse>(NULL);
  }

  personReIDUploadResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<personReIDUploadResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const personReIDUploadResponse& from);
  void MergeFrom(const personReIDUploadResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(personReIDUploadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personreid.personReIDUploadResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PersonReIDAPI_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class personReIDRealtimeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personreid.personReIDRealtimeRequest) */ {
 public:
  personReIDRealtimeRequest();
  virtual ~personReIDRealtimeRequest();

  personReIDRealtimeRequest(const personReIDRealtimeRequest& from);

  inline personReIDRealtimeRequest& operator=(const personReIDRealtimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  personReIDRealtimeRequest(personReIDRealtimeRequest&& from) noexcept
    : personReIDRealtimeRequest() {
    *this = ::std::move(from);
  }

  inline personReIDRealtimeRequest& operator=(personReIDRealtimeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const personReIDRealtimeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const personReIDRealtimeRequest* internal_default_instance() {
    return reinterpret_cast<const personReIDRealtimeRequest*>(
               &_personReIDRealtimeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(personReIDRealtimeRequest* other);
  friend void swap(personReIDRealtimeRequest& a, personReIDRealtimeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline personReIDRealtimeRequest* New() const final {
    return CreateMaybeMessage<personReIDRealtimeRequest>(NULL);
  }

  personReIDRealtimeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<personReIDRealtimeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const personReIDRealtimeRequest& from);
  void MergeFrom(const personReIDRealtimeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(personReIDRealtimeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes personEncodings = 1;
  void clear_personencodings();
  static const int kPersonEncodingsFieldNumber = 1;
  const ::std::string& personencodings() const;
  void set_personencodings(const ::std::string& value);
  #if LANG_CXX11
  void set_personencodings(::std::string&& value);
  #endif
  void set_personencodings(const char* value);
  void set_personencodings(const void* value, size_t size);
  ::std::string* mutable_personencodings();
  ::std::string* release_personencodings();
  void set_allocated_personencodings(::std::string* personencodings);

  // bytes rawData = 2;
  void clear_rawdata();
  static const int kRawDataFieldNumber = 2;
  const ::std::string& rawdata() const;
  void set_rawdata(const ::std::string& value);
  #if LANG_CXX11
  void set_rawdata(::std::string&& value);
  #endif
  void set_rawdata(const char* value);
  void set_rawdata(const void* value, size_t size);
  ::std::string* mutable_rawdata();
  ::std::string* release_rawdata();
  void set_allocated_rawdata(::std::string* rawdata);

  // int32 Width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 Hight = 4;
  void clear_hight();
  static const int kHightFieldNumber = 4;
  ::google::protobuf::int32 hight() const;
  void set_hight(::google::protobuf::int32 value);

  // int32 Channel = 5;
  void clear_channel();
  static const int kChannelFieldNumber = 5;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personreid.personReIDRealtimeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr personencodings_;
  ::google::protobuf::internal::ArenaStringPtr rawdata_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 hight_;
  ::google::protobuf::int32 channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PersonReIDAPI_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class personReIDRealtimeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personreid.personReIDRealtimeResponse) */ {
 public:
  personReIDRealtimeResponse();
  virtual ~personReIDRealtimeResponse();

  personReIDRealtimeResponse(const personReIDRealtimeResponse& from);

  inline personReIDRealtimeResponse& operator=(const personReIDRealtimeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  personReIDRealtimeResponse(personReIDRealtimeResponse&& from) noexcept
    : personReIDRealtimeResponse() {
    *this = ::std::move(from);
  }

  inline personReIDRealtimeResponse& operator=(personReIDRealtimeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const personReIDRealtimeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const personReIDRealtimeResponse* internal_default_instance() {
    return reinterpret_cast<const personReIDRealtimeResponse*>(
               &_personReIDRealtimeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(personReIDRealtimeResponse* other);
  friend void swap(personReIDRealtimeResponse& a, personReIDRealtimeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline personReIDRealtimeResponse* New() const final {
    return CreateMaybeMessage<personReIDRealtimeResponse>(NULL);
  }

  personReIDRealtimeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<personReIDRealtimeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const personReIDRealtimeResponse& from);
  void MergeFrom(const personReIDRealtimeResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(personReIDRealtimeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 status = 1;
  int status_size() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status(int index) const;
  void set_status(int index, ::google::protobuf::int32 value);
  void add_status(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      status() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_status();

  // repeated .common.BoundingBox personRect = 2;
  int personrect_size() const;
  void clear_personrect();
  static const int kPersonRectFieldNumber = 2;
  ::common::BoundingBox* mutable_personrect(int index);
  ::google::protobuf::RepeatedPtrField< ::common::BoundingBox >*
      mutable_personrect();
  const ::common::BoundingBox& personrect(int index) const;
  ::common::BoundingBox* add_personrect();
  const ::google::protobuf::RepeatedPtrField< ::common::BoundingBox >&
      personrect() const;

  // @@protoc_insertion_point(class_scope:personreid.personReIDRealtimeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > status_;
  mutable int _status_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::common::BoundingBox > personrect_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PersonReIDAPI_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class personReIDHistoryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personreid.personReIDHistoryRequest) */ {
 public:
  personReIDHistoryRequest();
  virtual ~personReIDHistoryRequest();

  personReIDHistoryRequest(const personReIDHistoryRequest& from);

  inline personReIDHistoryRequest& operator=(const personReIDHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  personReIDHistoryRequest(personReIDHistoryRequest&& from) noexcept
    : personReIDHistoryRequest() {
    *this = ::std::move(from);
  }

  inline personReIDHistoryRequest& operator=(personReIDHistoryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const personReIDHistoryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const personReIDHistoryRequest* internal_default_instance() {
    return reinterpret_cast<const personReIDHistoryRequest*>(
               &_personReIDHistoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(personReIDHistoryRequest* other);
  friend void swap(personReIDHistoryRequest& a, personReIDHistoryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline personReIDHistoryRequest* New() const final {
    return CreateMaybeMessage<personReIDHistoryRequest>(NULL);
  }

  personReIDHistoryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<personReIDHistoryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const personReIDHistoryRequest& from);
  void MergeFrom(const personReIDHistoryRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(personReIDHistoryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string imagePath = 1;
  int imagepath_size() const;
  void clear_imagepath();
  static const int kImagePathFieldNumber = 1;
  const ::std::string& imagepath(int index) const;
  ::std::string* mutable_imagepath(int index);
  void set_imagepath(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_imagepath(int index, ::std::string&& value);
  #endif
  void set_imagepath(int index, const char* value);
  void set_imagepath(int index, const char* value, size_t size);
  ::std::string* add_imagepath();
  void add_imagepath(const ::std::string& value);
  #if LANG_CXX11
  void add_imagepath(::std::string&& value);
  #endif
  void add_imagepath(const char* value);
  void add_imagepath(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& imagepath() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_imagepath();

  // @@protoc_insertion_point(class_scope:personreid.personReIDHistoryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> imagepath_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PersonReIDAPI_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class personReIDHistoryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personreid.personReIDHistoryResponse) */ {
 public:
  personReIDHistoryResponse();
  virtual ~personReIDHistoryResponse();

  personReIDHistoryResponse(const personReIDHistoryResponse& from);

  inline personReIDHistoryResponse& operator=(const personReIDHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  personReIDHistoryResponse(personReIDHistoryResponse&& from) noexcept
    : personReIDHistoryResponse() {
    *this = ::std::move(from);
  }

  inline personReIDHistoryResponse& operator=(personReIDHistoryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const personReIDHistoryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const personReIDHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const personReIDHistoryResponse*>(
               &_personReIDHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(personReIDHistoryResponse* other);
  friend void swap(personReIDHistoryResponse& a, personReIDHistoryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline personReIDHistoryResponse* New() const final {
    return CreateMaybeMessage<personReIDHistoryResponse>(NULL);
  }

  personReIDHistoryResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<personReIDHistoryResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const personReIDHistoryResponse& from);
  void MergeFrom(const personReIDHistoryResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(personReIDHistoryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 index = 1;
  int index_size() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index(int index) const;
  void set_index(int index, ::google::protobuf::int32 value);
  void add_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_index();

  // @@protoc_insertion_point(class_scope:personreid.personReIDHistoryResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > index_;
  mutable int _index_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PersonReIDAPI_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// personReIDUploadRequest

// bytes rawdata = 1;
inline void personReIDUploadRequest::clear_rawdata() {
  rawdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& personReIDUploadRequest::rawdata() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDUploadRequest.rawdata)
  return rawdata_.GetNoArena();
}
inline void personReIDUploadRequest::set_rawdata(const ::std::string& value) {
  
  rawdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personreid.personReIDUploadRequest.rawdata)
}
#if LANG_CXX11
inline void personReIDUploadRequest::set_rawdata(::std::string&& value) {
  
  rawdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:personreid.personReIDUploadRequest.rawdata)
}
#endif
inline void personReIDUploadRequest::set_rawdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rawdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personreid.personReIDUploadRequest.rawdata)
}
inline void personReIDUploadRequest::set_rawdata(const void* value, size_t size) {
  
  rawdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personreid.personReIDUploadRequest.rawdata)
}
inline ::std::string* personReIDUploadRequest::mutable_rawdata() {
  
  // @@protoc_insertion_point(field_mutable:personreid.personReIDUploadRequest.rawdata)
  return rawdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* personReIDUploadRequest::release_rawdata() {
  // @@protoc_insertion_point(field_release:personreid.personReIDUploadRequest.rawdata)
  
  return rawdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void personReIDUploadRequest::set_allocated_rawdata(::std::string* rawdata) {
  if (rawdata != NULL) {
    
  } else {
    
  }
  rawdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rawdata);
  // @@protoc_insertion_point(field_set_allocated:personreid.personReIDUploadRequest.rawdata)
}

// int32 Width = 2;
inline void personReIDUploadRequest::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 personReIDUploadRequest::width() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDUploadRequest.Width)
  return width_;
}
inline void personReIDUploadRequest::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:personreid.personReIDUploadRequest.Width)
}

// int32 Hight = 3;
inline void personReIDUploadRequest::clear_hight() {
  hight_ = 0;
}
inline ::google::protobuf::int32 personReIDUploadRequest::hight() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDUploadRequest.Hight)
  return hight_;
}
inline void personReIDUploadRequest::set_hight(::google::protobuf::int32 value) {
  
  hight_ = value;
  // @@protoc_insertion_point(field_set:personreid.personReIDUploadRequest.Hight)
}

// int32 Channel = 4;
inline void personReIDUploadRequest::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 personReIDUploadRequest::channel() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDUploadRequest.Channel)
  return channel_;
}
inline void personReIDUploadRequest::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:personreid.personReIDUploadRequest.Channel)
}

// -------------------------------------------------------------------

// personReIDUploadResponse

// int32 status = 1;
inline void personReIDUploadResponse::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 personReIDUploadResponse::status() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDUploadResponse.status)
  return status_;
}
inline void personReIDUploadResponse::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:personreid.personReIDUploadResponse.status)
}

// -------------------------------------------------------------------

// personReIDRealtimeRequest

// bytes personEncodings = 1;
inline void personReIDRealtimeRequest::clear_personencodings() {
  personencodings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& personReIDRealtimeRequest::personencodings() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDRealtimeRequest.personEncodings)
  return personencodings_.GetNoArena();
}
inline void personReIDRealtimeRequest::set_personencodings(const ::std::string& value) {
  
  personencodings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personreid.personReIDRealtimeRequest.personEncodings)
}
#if LANG_CXX11
inline void personReIDRealtimeRequest::set_personencodings(::std::string&& value) {
  
  personencodings_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:personreid.personReIDRealtimeRequest.personEncodings)
}
#endif
inline void personReIDRealtimeRequest::set_personencodings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  personencodings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personreid.personReIDRealtimeRequest.personEncodings)
}
inline void personReIDRealtimeRequest::set_personencodings(const void* value, size_t size) {
  
  personencodings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personreid.personReIDRealtimeRequest.personEncodings)
}
inline ::std::string* personReIDRealtimeRequest::mutable_personencodings() {
  
  // @@protoc_insertion_point(field_mutable:personreid.personReIDRealtimeRequest.personEncodings)
  return personencodings_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* personReIDRealtimeRequest::release_personencodings() {
  // @@protoc_insertion_point(field_release:personreid.personReIDRealtimeRequest.personEncodings)
  
  return personencodings_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void personReIDRealtimeRequest::set_allocated_personencodings(::std::string* personencodings) {
  if (personencodings != NULL) {
    
  } else {
    
  }
  personencodings_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), personencodings);
  // @@protoc_insertion_point(field_set_allocated:personreid.personReIDRealtimeRequest.personEncodings)
}

// bytes rawData = 2;
inline void personReIDRealtimeRequest::clear_rawdata() {
  rawdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& personReIDRealtimeRequest::rawdata() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDRealtimeRequest.rawData)
  return rawdata_.GetNoArena();
}
inline void personReIDRealtimeRequest::set_rawdata(const ::std::string& value) {
  
  rawdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personreid.personReIDRealtimeRequest.rawData)
}
#if LANG_CXX11
inline void personReIDRealtimeRequest::set_rawdata(::std::string&& value) {
  
  rawdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:personreid.personReIDRealtimeRequest.rawData)
}
#endif
inline void personReIDRealtimeRequest::set_rawdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rawdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personreid.personReIDRealtimeRequest.rawData)
}
inline void personReIDRealtimeRequest::set_rawdata(const void* value, size_t size) {
  
  rawdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personreid.personReIDRealtimeRequest.rawData)
}
inline ::std::string* personReIDRealtimeRequest::mutable_rawdata() {
  
  // @@protoc_insertion_point(field_mutable:personreid.personReIDRealtimeRequest.rawData)
  return rawdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* personReIDRealtimeRequest::release_rawdata() {
  // @@protoc_insertion_point(field_release:personreid.personReIDRealtimeRequest.rawData)
  
  return rawdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void personReIDRealtimeRequest::set_allocated_rawdata(::std::string* rawdata) {
  if (rawdata != NULL) {
    
  } else {
    
  }
  rawdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rawdata);
  // @@protoc_insertion_point(field_set_allocated:personreid.personReIDRealtimeRequest.rawData)
}

// int32 Width = 3;
inline void personReIDRealtimeRequest::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 personReIDRealtimeRequest::width() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDRealtimeRequest.Width)
  return width_;
}
inline void personReIDRealtimeRequest::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:personreid.personReIDRealtimeRequest.Width)
}

// int32 Hight = 4;
inline void personReIDRealtimeRequest::clear_hight() {
  hight_ = 0;
}
inline ::google::protobuf::int32 personReIDRealtimeRequest::hight() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDRealtimeRequest.Hight)
  return hight_;
}
inline void personReIDRealtimeRequest::set_hight(::google::protobuf::int32 value) {
  
  hight_ = value;
  // @@protoc_insertion_point(field_set:personreid.personReIDRealtimeRequest.Hight)
}

// int32 Channel = 5;
inline void personReIDRealtimeRequest::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 personReIDRealtimeRequest::channel() const {
  // @@protoc_insertion_point(field_get:personreid.personReIDRealtimeRequest.Channel)
  return channel_;
}
inline void personReIDRealtimeRequest::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:personreid.personReIDRealtimeRequest.Channel)
}

// -------------------------------------------------------------------

// personReIDRealtimeResponse

// repeated int32 status = 1;
inline int personReIDRealtimeResponse::status_size() const {
  return status_.size();
}
inline void personReIDRealtimeResponse::clear_status() {
  status_.Clear();
}
inline ::google::protobuf::int32 personReIDRealtimeResponse::status(int index) const {
  // @@protoc_insertion_point(field_get:personreid.personReIDRealtimeResponse.status)
  return status_.Get(index);
}
inline void personReIDRealtimeResponse::set_status(int index, ::google::protobuf::int32 value) {
  status_.Set(index, value);
  // @@protoc_insertion_point(field_set:personreid.personReIDRealtimeResponse.status)
}
inline void personReIDRealtimeResponse::add_status(::google::protobuf::int32 value) {
  status_.Add(value);
  // @@protoc_insertion_point(field_add:personreid.personReIDRealtimeResponse.status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
personReIDRealtimeResponse::status() const {
  // @@protoc_insertion_point(field_list:personreid.personReIDRealtimeResponse.status)
  return status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
personReIDRealtimeResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable_list:personreid.personReIDRealtimeResponse.status)
  return &status_;
}

// repeated .common.BoundingBox personRect = 2;
inline int personReIDRealtimeResponse::personrect_size() const {
  return personrect_.size();
}
inline ::common::BoundingBox* personReIDRealtimeResponse::mutable_personrect(int index) {
  // @@protoc_insertion_point(field_mutable:personreid.personReIDRealtimeResponse.personRect)
  return personrect_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::common::BoundingBox >*
personReIDRealtimeResponse::mutable_personrect() {
  // @@protoc_insertion_point(field_mutable_list:personreid.personReIDRealtimeResponse.personRect)
  return &personrect_;
}
inline const ::common::BoundingBox& personReIDRealtimeResponse::personrect(int index) const {
  // @@protoc_insertion_point(field_get:personreid.personReIDRealtimeResponse.personRect)
  return personrect_.Get(index);
}
inline ::common::BoundingBox* personReIDRealtimeResponse::add_personrect() {
  // @@protoc_insertion_point(field_add:personreid.personReIDRealtimeResponse.personRect)
  return personrect_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::common::BoundingBox >&
personReIDRealtimeResponse::personrect() const {
  // @@protoc_insertion_point(field_list:personreid.personReIDRealtimeResponse.personRect)
  return personrect_;
}

// -------------------------------------------------------------------

// personReIDHistoryRequest

// repeated string imagePath = 1;
inline int personReIDHistoryRequest::imagepath_size() const {
  return imagepath_.size();
}
inline void personReIDHistoryRequest::clear_imagepath() {
  imagepath_.Clear();
}
inline const ::std::string& personReIDHistoryRequest::imagepath(int index) const {
  // @@protoc_insertion_point(field_get:personreid.personReIDHistoryRequest.imagePath)
  return imagepath_.Get(index);
}
inline ::std::string* personReIDHistoryRequest::mutable_imagepath(int index) {
  // @@protoc_insertion_point(field_mutable:personreid.personReIDHistoryRequest.imagePath)
  return imagepath_.Mutable(index);
}
inline void personReIDHistoryRequest::set_imagepath(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:personreid.personReIDHistoryRequest.imagePath)
  imagepath_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void personReIDHistoryRequest::set_imagepath(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:personreid.personReIDHistoryRequest.imagePath)
  imagepath_.Mutable(index)->assign(std::move(value));
}
#endif
inline void personReIDHistoryRequest::set_imagepath(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  imagepath_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:personreid.personReIDHistoryRequest.imagePath)
}
inline void personReIDHistoryRequest::set_imagepath(int index, const char* value, size_t size) {
  imagepath_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:personreid.personReIDHistoryRequest.imagePath)
}
inline ::std::string* personReIDHistoryRequest::add_imagepath() {
  // @@protoc_insertion_point(field_add_mutable:personreid.personReIDHistoryRequest.imagePath)
  return imagepath_.Add();
}
inline void personReIDHistoryRequest::add_imagepath(const ::std::string& value) {
  imagepath_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:personreid.personReIDHistoryRequest.imagePath)
}
#if LANG_CXX11
inline void personReIDHistoryRequest::add_imagepath(::std::string&& value) {
  imagepath_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:personreid.personReIDHistoryRequest.imagePath)
}
#endif
inline void personReIDHistoryRequest::add_imagepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  imagepath_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:personreid.personReIDHistoryRequest.imagePath)
}
inline void personReIDHistoryRequest::add_imagepath(const char* value, size_t size) {
  imagepath_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:personreid.personReIDHistoryRequest.imagePath)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
personReIDHistoryRequest::imagepath() const {
  // @@protoc_insertion_point(field_list:personreid.personReIDHistoryRequest.imagePath)
  return imagepath_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
personReIDHistoryRequest::mutable_imagepath() {
  // @@protoc_insertion_point(field_mutable_list:personreid.personReIDHistoryRequest.imagePath)
  return &imagepath_;
}

// -------------------------------------------------------------------

// personReIDHistoryResponse

// repeated int32 index = 1;
inline int personReIDHistoryResponse::index_size() const {
  return index_.size();
}
inline void personReIDHistoryResponse::clear_index() {
  index_.Clear();
}
inline ::google::protobuf::int32 personReIDHistoryResponse::index(int index) const {
  // @@protoc_insertion_point(field_get:personreid.personReIDHistoryResponse.index)
  return index_.Get(index);
}
inline void personReIDHistoryResponse::set_index(int index, ::google::protobuf::int32 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:personreid.personReIDHistoryResponse.index)
}
inline void personReIDHistoryResponse::add_index(::google::protobuf::int32 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:personreid.personReIDHistoryResponse.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
personReIDHistoryResponse::index() const {
  // @@protoc_insertion_point(field_list:personreid.personReIDHistoryResponse.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
personReIDHistoryResponse::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:personreid.personReIDHistoryResponse.index)
  return &index_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace personreid

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_PersonReIDAPI_2eproto
