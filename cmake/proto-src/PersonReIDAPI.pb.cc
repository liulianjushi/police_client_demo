// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PersonReIDAPI.proto

#include "PersonReIDAPI.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoundingBox;
}  // namespace protobuf_common_2eproto
namespace personreid {
class personReIDUploadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<personReIDUploadRequest>
      _instance;
} _personReIDUploadRequest_default_instance_;
class personReIDUploadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<personReIDUploadResponse>
      _instance;
} _personReIDUploadResponse_default_instance_;
class personReIDRealtimeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<personReIDRealtimeRequest>
      _instance;
} _personReIDRealtimeRequest_default_instance_;
class personReIDRealtimeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<personReIDRealtimeResponse>
      _instance;
} _personReIDRealtimeResponse_default_instance_;
class personReIDHistoryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<personReIDHistoryRequest>
      _instance;
} _personReIDHistoryRequest_default_instance_;
class personReIDHistoryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<personReIDHistoryResponse>
      _instance;
} _personReIDHistoryResponse_default_instance_;
}  // namespace personreid
namespace protobuf_PersonReIDAPI_2eproto {
static void InitDefaultspersonReIDUploadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::personreid::_personReIDUploadRequest_default_instance_;
    new (ptr) ::personreid::personReIDUploadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::personreid::personReIDUploadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_personReIDUploadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspersonReIDUploadRequest}, {}};

static void InitDefaultspersonReIDUploadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::personreid::_personReIDUploadResponse_default_instance_;
    new (ptr) ::personreid::personReIDUploadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::personreid::personReIDUploadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_personReIDUploadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspersonReIDUploadResponse}, {}};

static void InitDefaultspersonReIDRealtimeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::personreid::_personReIDRealtimeRequest_default_instance_;
    new (ptr) ::personreid::personReIDRealtimeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::personreid::personReIDRealtimeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_personReIDRealtimeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspersonReIDRealtimeRequest}, {}};

static void InitDefaultspersonReIDRealtimeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::personreid::_personReIDRealtimeResponse_default_instance_;
    new (ptr) ::personreid::personReIDRealtimeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::personreid::personReIDRealtimeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_personReIDRealtimeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultspersonReIDRealtimeResponse}, {
      &protobuf_common_2eproto::scc_info_BoundingBox.base,}};

static void InitDefaultspersonReIDHistoryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::personreid::_personReIDHistoryRequest_default_instance_;
    new (ptr) ::personreid::personReIDHistoryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::personreid::personReIDHistoryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_personReIDHistoryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspersonReIDHistoryRequest}, {}};

static void InitDefaultspersonReIDHistoryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::personreid::_personReIDHistoryResponse_default_instance_;
    new (ptr) ::personreid::personReIDHistoryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::personreid::personReIDHistoryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_personReIDHistoryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspersonReIDHistoryResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_personReIDUploadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_personReIDUploadResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_personReIDRealtimeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_personReIDRealtimeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_personReIDHistoryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_personReIDHistoryResponse.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDUploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDUploadRequest, rawdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDUploadRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDUploadRequest, hight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDUploadRequest, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDUploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDUploadResponse, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDRealtimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDRealtimeRequest, personencodings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDRealtimeRequest, rawdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDRealtimeRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDRealtimeRequest, hight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDRealtimeRequest, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDRealtimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDRealtimeResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDRealtimeResponse, personrect_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDHistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDHistoryRequest, imagepath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personreid::personReIDHistoryResponse, index_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::personreid::personReIDUploadRequest)},
  { 9, -1, sizeof(::personreid::personReIDUploadResponse)},
  { 15, -1, sizeof(::personreid::personReIDRealtimeRequest)},
  { 25, -1, sizeof(::personreid::personReIDRealtimeResponse)},
  { 32, -1, sizeof(::personreid::personReIDHistoryRequest)},
  { 38, -1, sizeof(::personreid::personReIDHistoryResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::personreid::_personReIDUploadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::personreid::_personReIDUploadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::personreid::_personReIDRealtimeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::personreid::_personReIDRealtimeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::personreid::_personReIDHistoryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::personreid::_personReIDHistoryResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "PersonReIDAPI.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023PersonReIDAPI.proto\022\npersonreid\032\014commo"
      "n.proto\"Y\n\027personReIDUploadRequest\022\017\n\007ra"
      "wdata\030\001 \001(\014\022\r\n\005Width\030\002 \001(\005\022\r\n\005Hight\030\003 \001("
      "\005\022\017\n\007Channel\030\004 \001(\005\"*\n\030personReIDUploadRe"
      "sponse\022\016\n\006status\030\001 \001(\005\"t\n\031personReIDReal"
      "timeRequest\022\027\n\017personEncodings\030\001 \001(\014\022\017\n\007"
      "rawData\030\002 \001(\014\022\r\n\005Width\030\003 \001(\005\022\r\n\005Hight\030\004 "
      "\001(\005\022\017\n\007Channel\030\005 \001(\005\"U\n\032personReIDRealti"
      "meResponse\022\016\n\006status\030\001 \003(\005\022\'\n\npersonRect"
      "\030\002 \003(\0132\023.common.BoundingBox\"-\n\030personReI"
      "DHistoryRequest\022\021\n\timagePath\030\001 \003(\t\"*\n\031pe"
      "rsonReIDHistoryResponse\022\r\n\005index\030\001 \003(\0052\273"
      "\002\n\rPersonReIDAPI\022_\n\020personReIDUpload\022#.p"
      "ersonreid.personReIDUploadRequest\032$.pers"
      "onreid.personReIDUploadResponse\"\000\022e\n\022per"
      "sonReIDRealtime\022%.personreid.personReIDR"
      "ealtimeRequest\032&.personreid.personReIDRe"
      "altimeResponse\"\000\022b\n\021personReIDHistory\022$."
      "personreid.personReIDHistoryRequest\032%.pe"
      "rsonreid.personReIDHistoryResponse\"\000b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 804);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PersonReIDAPI.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_PersonReIDAPI_2eproto
namespace personreid {

// ===================================================================

void personReIDUploadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int personReIDUploadRequest::kRawdataFieldNumber;
const int personReIDUploadRequest::kWidthFieldNumber;
const int personReIDUploadRequest::kHightFieldNumber;
const int personReIDUploadRequest::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

personReIDUploadRequest::personReIDUploadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PersonReIDAPI_2eproto::scc_info_personReIDUploadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:personreid.personReIDUploadRequest)
}
personReIDUploadRequest::personReIDUploadRequest(const personReIDUploadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rawdata().size() > 0) {
    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&width_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:personreid.personReIDUploadRequest)
}

void personReIDUploadRequest::SharedCtor() {
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&width_)) + sizeof(channel_));
}

personReIDUploadRequest::~personReIDUploadRequest() {
  // @@protoc_insertion_point(destructor:personreid.personReIDUploadRequest)
  SharedDtor();
}

void personReIDUploadRequest::SharedDtor() {
  rawdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void personReIDUploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* personReIDUploadRequest::descriptor() {
  ::protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const personReIDUploadRequest& personReIDUploadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PersonReIDAPI_2eproto::scc_info_personReIDUploadRequest.base);
  return *internal_default_instance();
}


void personReIDUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personreid.personReIDUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rawdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&width_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool personReIDUploadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personreid.personReIDUploadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes rawdata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rawdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personreid.personReIDUploadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personreid.personReIDUploadRequest)
  return false;
#undef DO_
}

void personReIDUploadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personreid.personReIDUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes rawdata = 1;
  if (this->rawdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->rawdata(), output);
  }

  // int32 Width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 Hight = 3;
  if (this->hight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hight(), output);
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:personreid.personReIDUploadRequest)
}

::google::protobuf::uint8* personReIDUploadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personreid.personReIDUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes rawdata = 1;
  if (this->rawdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->rawdata(), target);
  }

  // int32 Width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 Hight = 3;
  if (this->hight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hight(), target);
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:personreid.personReIDUploadRequest)
  return target;
}

size_t personReIDUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personreid.personReIDUploadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes rawdata = 1;
  if (this->rawdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rawdata());
  }

  // int32 Width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 Hight = 3;
  if (this->hight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hight());
  }

  // int32 Channel = 4;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void personReIDUploadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personreid.personReIDUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const personReIDUploadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const personReIDUploadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personreid.personReIDUploadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personreid.personReIDUploadRequest)
    MergeFrom(*source);
  }
}

void personReIDUploadRequest::MergeFrom(const personReIDUploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personreid.personReIDUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rawdata().size() > 0) {

    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.hight() != 0) {
    set_hight(from.hight());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void personReIDUploadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personreid.personReIDUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void personReIDUploadRequest::CopyFrom(const personReIDUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personreid.personReIDUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool personReIDUploadRequest::IsInitialized() const {
  return true;
}

void personReIDUploadRequest::Swap(personReIDUploadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void personReIDUploadRequest::InternalSwap(personReIDUploadRequest* other) {
  using std::swap;
  rawdata_.Swap(&other->rawdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(hight_, other->hight_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata personReIDUploadRequest::GetMetadata() const {
  protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void personReIDUploadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int personReIDUploadResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

personReIDUploadResponse::personReIDUploadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PersonReIDAPI_2eproto::scc_info_personReIDUploadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:personreid.personReIDUploadResponse)
}
personReIDUploadResponse::personReIDUploadResponse(const personReIDUploadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:personreid.personReIDUploadResponse)
}

void personReIDUploadResponse::SharedCtor() {
  status_ = 0;
}

personReIDUploadResponse::~personReIDUploadResponse() {
  // @@protoc_insertion_point(destructor:personreid.personReIDUploadResponse)
  SharedDtor();
}

void personReIDUploadResponse::SharedDtor() {
}

void personReIDUploadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* personReIDUploadResponse::descriptor() {
  ::protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const personReIDUploadResponse& personReIDUploadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PersonReIDAPI_2eproto::scc_info_personReIDUploadResponse.base);
  return *internal_default_instance();
}


void personReIDUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personreid.personReIDUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

bool personReIDUploadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personreid.personReIDUploadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personreid.personReIDUploadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personreid.personReIDUploadResponse)
  return false;
#undef DO_
}

void personReIDUploadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personreid.personReIDUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:personreid.personReIDUploadResponse)
}

::google::protobuf::uint8* personReIDUploadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personreid.personReIDUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:personreid.personReIDUploadResponse)
  return target;
}

size_t personReIDUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personreid.personReIDUploadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void personReIDUploadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personreid.personReIDUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const personReIDUploadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const personReIDUploadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personreid.personReIDUploadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personreid.personReIDUploadResponse)
    MergeFrom(*source);
  }
}

void personReIDUploadResponse::MergeFrom(const personReIDUploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personreid.personReIDUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void personReIDUploadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personreid.personReIDUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void personReIDUploadResponse::CopyFrom(const personReIDUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personreid.personReIDUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool personReIDUploadResponse::IsInitialized() const {
  return true;
}

void personReIDUploadResponse::Swap(personReIDUploadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void personReIDUploadResponse::InternalSwap(personReIDUploadResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata personReIDUploadResponse::GetMetadata() const {
  protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void personReIDRealtimeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int personReIDRealtimeRequest::kPersonEncodingsFieldNumber;
const int personReIDRealtimeRequest::kRawDataFieldNumber;
const int personReIDRealtimeRequest::kWidthFieldNumber;
const int personReIDRealtimeRequest::kHightFieldNumber;
const int personReIDRealtimeRequest::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

personReIDRealtimeRequest::personReIDRealtimeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PersonReIDAPI_2eproto::scc_info_personReIDRealtimeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:personreid.personReIDRealtimeRequest)
}
personReIDRealtimeRequest::personReIDRealtimeRequest(const personReIDRealtimeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  personencodings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.personencodings().size() > 0) {
    personencodings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.personencodings_);
  }
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rawdata().size() > 0) {
    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&width_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:personreid.personReIDRealtimeRequest)
}

void personReIDRealtimeRequest::SharedCtor() {
  personencodings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&width_)) + sizeof(channel_));
}

personReIDRealtimeRequest::~personReIDRealtimeRequest() {
  // @@protoc_insertion_point(destructor:personreid.personReIDRealtimeRequest)
  SharedDtor();
}

void personReIDRealtimeRequest::SharedDtor() {
  personencodings_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rawdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void personReIDRealtimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* personReIDRealtimeRequest::descriptor() {
  ::protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const personReIDRealtimeRequest& personReIDRealtimeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PersonReIDAPI_2eproto::scc_info_personReIDRealtimeRequest.base);
  return *internal_default_instance();
}


void personReIDRealtimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personreid.personReIDRealtimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  personencodings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rawdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&width_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool personReIDRealtimeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personreid.personReIDRealtimeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes personEncodings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_personencodings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes rawData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rawdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personreid.personReIDRealtimeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personreid.personReIDRealtimeRequest)
  return false;
#undef DO_
}

void personReIDRealtimeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personreid.personReIDRealtimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes personEncodings = 1;
  if (this->personencodings().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->personencodings(), output);
  }

  // bytes rawData = 2;
  if (this->rawdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->rawdata(), output);
  }

  // int32 Width = 3;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // int32 Hight = 4;
  if (this->hight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hight(), output);
  }

  // int32 Channel = 5;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:personreid.personReIDRealtimeRequest)
}

::google::protobuf::uint8* personReIDRealtimeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personreid.personReIDRealtimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes personEncodings = 1;
  if (this->personencodings().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->personencodings(), target);
  }

  // bytes rawData = 2;
  if (this->rawdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->rawdata(), target);
  }

  // int32 Width = 3;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // int32 Hight = 4;
  if (this->hight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hight(), target);
  }

  // int32 Channel = 5;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:personreid.personReIDRealtimeRequest)
  return target;
}

size_t personReIDRealtimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personreid.personReIDRealtimeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes personEncodings = 1;
  if (this->personencodings().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->personencodings());
  }

  // bytes rawData = 2;
  if (this->rawdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rawdata());
  }

  // int32 Width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 Hight = 4;
  if (this->hight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hight());
  }

  // int32 Channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void personReIDRealtimeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personreid.personReIDRealtimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const personReIDRealtimeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const personReIDRealtimeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personreid.personReIDRealtimeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personreid.personReIDRealtimeRequest)
    MergeFrom(*source);
  }
}

void personReIDRealtimeRequest::MergeFrom(const personReIDRealtimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personreid.personReIDRealtimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.personencodings().size() > 0) {

    personencodings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.personencodings_);
  }
  if (from.rawdata().size() > 0) {

    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.hight() != 0) {
    set_hight(from.hight());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void personReIDRealtimeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personreid.personReIDRealtimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void personReIDRealtimeRequest::CopyFrom(const personReIDRealtimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personreid.personReIDRealtimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool personReIDRealtimeRequest::IsInitialized() const {
  return true;
}

void personReIDRealtimeRequest::Swap(personReIDRealtimeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void personReIDRealtimeRequest::InternalSwap(personReIDRealtimeRequest* other) {
  using std::swap;
  personencodings_.Swap(&other->personencodings_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rawdata_.Swap(&other->rawdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(hight_, other->hight_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata personReIDRealtimeRequest::GetMetadata() const {
  protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void personReIDRealtimeResponse::InitAsDefaultInstance() {
}
void personReIDRealtimeResponse::clear_personrect() {
  personrect_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int personReIDRealtimeResponse::kStatusFieldNumber;
const int personReIDRealtimeResponse::kPersonRectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

personReIDRealtimeResponse::personReIDRealtimeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PersonReIDAPI_2eproto::scc_info_personReIDRealtimeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:personreid.personReIDRealtimeResponse)
}
personReIDRealtimeResponse::personReIDRealtimeResponse(const personReIDRealtimeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      status_(from.status_),
      personrect_(from.personrect_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:personreid.personReIDRealtimeResponse)
}

void personReIDRealtimeResponse::SharedCtor() {
}

personReIDRealtimeResponse::~personReIDRealtimeResponse() {
  // @@protoc_insertion_point(destructor:personreid.personReIDRealtimeResponse)
  SharedDtor();
}

void personReIDRealtimeResponse::SharedDtor() {
}

void personReIDRealtimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* personReIDRealtimeResponse::descriptor() {
  ::protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const personReIDRealtimeResponse& personReIDRealtimeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PersonReIDAPI_2eproto::scc_info_personReIDRealtimeResponse.base);
  return *internal_default_instance();
}


void personReIDRealtimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personreid.personReIDRealtimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  personrect_.Clear();
  _internal_metadata_.Clear();
}

bool personReIDRealtimeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personreid.personReIDRealtimeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_status())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_status())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.BoundingBox personRect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_personrect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personreid.personReIDRealtimeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personreid.personReIDRealtimeResponse)
  return false;
#undef DO_
}

void personReIDRealtimeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personreid.personReIDRealtimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 status = 1;
  if (this->status_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _status_cached_byte_size_));
  }
  for (int i = 0, n = this->status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->status(i), output);
  }

  // repeated .common.BoundingBox personRect = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->personrect_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->personrect(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:personreid.personReIDRealtimeResponse)
}

::google::protobuf::uint8* personReIDRealtimeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personreid.personReIDRealtimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 status = 1;
  if (this->status_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _status_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->status_, target);
  }

  // repeated .common.BoundingBox personRect = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->personrect_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->personrect(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:personreid.personReIDRealtimeResponse)
  return target;
}

size_t personReIDRealtimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personreid.personReIDRealtimeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 status = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->status_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _status_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .common.BoundingBox personRect = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->personrect_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->personrect(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void personReIDRealtimeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personreid.personReIDRealtimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const personReIDRealtimeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const personReIDRealtimeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personreid.personReIDRealtimeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personreid.personReIDRealtimeResponse)
    MergeFrom(*source);
  }
}

void personReIDRealtimeResponse::MergeFrom(const personReIDRealtimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personreid.personReIDRealtimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  personrect_.MergeFrom(from.personrect_);
}

void personReIDRealtimeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personreid.personReIDRealtimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void personReIDRealtimeResponse::CopyFrom(const personReIDRealtimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personreid.personReIDRealtimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool personReIDRealtimeResponse::IsInitialized() const {
  return true;
}

void personReIDRealtimeResponse::Swap(personReIDRealtimeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void personReIDRealtimeResponse::InternalSwap(personReIDRealtimeResponse* other) {
  using std::swap;
  status_.InternalSwap(&other->status_);
  CastToBase(&personrect_)->InternalSwap(CastToBase(&other->personrect_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata personReIDRealtimeResponse::GetMetadata() const {
  protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void personReIDHistoryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int personReIDHistoryRequest::kImagePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

personReIDHistoryRequest::personReIDHistoryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PersonReIDAPI_2eproto::scc_info_personReIDHistoryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:personreid.personReIDHistoryRequest)
}
personReIDHistoryRequest::personReIDHistoryRequest(const personReIDHistoryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      imagepath_(from.imagepath_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:personreid.personReIDHistoryRequest)
}

void personReIDHistoryRequest::SharedCtor() {
}

personReIDHistoryRequest::~personReIDHistoryRequest() {
  // @@protoc_insertion_point(destructor:personreid.personReIDHistoryRequest)
  SharedDtor();
}

void personReIDHistoryRequest::SharedDtor() {
}

void personReIDHistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* personReIDHistoryRequest::descriptor() {
  ::protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const personReIDHistoryRequest& personReIDHistoryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PersonReIDAPI_2eproto::scc_info_personReIDHistoryRequest.base);
  return *internal_default_instance();
}


void personReIDHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personreid.personReIDHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imagepath_.Clear();
  _internal_metadata_.Clear();
}

bool personReIDHistoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personreid.personReIDHistoryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string imagePath = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_imagepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imagepath(this->imagepath_size() - 1).data(),
            static_cast<int>(this->imagepath(this->imagepath_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personreid.personReIDHistoryRequest.imagePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personreid.personReIDHistoryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personreid.personReIDHistoryRequest)
  return false;
#undef DO_
}

void personReIDHistoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personreid.personReIDHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string imagePath = 1;
  for (int i = 0, n = this->imagepath_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagepath(i).data(), static_cast<int>(this->imagepath(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personreid.personReIDHistoryRequest.imagePath");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->imagepath(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:personreid.personReIDHistoryRequest)
}

::google::protobuf::uint8* personReIDHistoryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personreid.personReIDHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string imagePath = 1;
  for (int i = 0, n = this->imagepath_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imagepath(i).data(), static_cast<int>(this->imagepath(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personreid.personReIDHistoryRequest.imagePath");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->imagepath(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:personreid.personReIDHistoryRequest)
  return target;
}

size_t personReIDHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personreid.personReIDHistoryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string imagePath = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->imagepath_size());
  for (int i = 0, n = this->imagepath_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->imagepath(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void personReIDHistoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personreid.personReIDHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const personReIDHistoryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const personReIDHistoryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personreid.personReIDHistoryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personreid.personReIDHistoryRequest)
    MergeFrom(*source);
  }
}

void personReIDHistoryRequest::MergeFrom(const personReIDHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personreid.personReIDHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  imagepath_.MergeFrom(from.imagepath_);
}

void personReIDHistoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personreid.personReIDHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void personReIDHistoryRequest::CopyFrom(const personReIDHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personreid.personReIDHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool personReIDHistoryRequest::IsInitialized() const {
  return true;
}

void personReIDHistoryRequest::Swap(personReIDHistoryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void personReIDHistoryRequest::InternalSwap(personReIDHistoryRequest* other) {
  using std::swap;
  imagepath_.InternalSwap(CastToBase(&other->imagepath_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata personReIDHistoryRequest::GetMetadata() const {
  protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void personReIDHistoryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int personReIDHistoryResponse::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

personReIDHistoryResponse::personReIDHistoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PersonReIDAPI_2eproto::scc_info_personReIDHistoryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:personreid.personReIDHistoryResponse)
}
personReIDHistoryResponse::personReIDHistoryResponse(const personReIDHistoryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      index_(from.index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:personreid.personReIDHistoryResponse)
}

void personReIDHistoryResponse::SharedCtor() {
}

personReIDHistoryResponse::~personReIDHistoryResponse() {
  // @@protoc_insertion_point(destructor:personreid.personReIDHistoryResponse)
  SharedDtor();
}

void personReIDHistoryResponse::SharedDtor() {
}

void personReIDHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* personReIDHistoryResponse::descriptor() {
  ::protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const personReIDHistoryResponse& personReIDHistoryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PersonReIDAPI_2eproto::scc_info_personReIDHistoryResponse.base);
  return *internal_default_instance();
}


void personReIDHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personreid.personReIDHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_.Clear();
  _internal_metadata_.Clear();
}

bool personReIDHistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personreid.personReIDHistoryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personreid.personReIDHistoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personreid.personReIDHistoryResponse)
  return false;
#undef DO_
}

void personReIDHistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personreid.personReIDHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 index = 1;
  if (this->index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _index_cached_byte_size_));
  }
  for (int i = 0, n = this->index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->index(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:personreid.personReIDHistoryResponse)
}

::google::protobuf::uint8* personReIDHistoryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personreid.personReIDHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 index = 1;
  if (this->index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->index_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:personreid.personReIDHistoryResponse)
  return target;
}

size_t personReIDHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personreid.personReIDHistoryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 index = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void personReIDHistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personreid.personReIDHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const personReIDHistoryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const personReIDHistoryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personreid.personReIDHistoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personreid.personReIDHistoryResponse)
    MergeFrom(*source);
  }
}

void personReIDHistoryResponse::MergeFrom(const personReIDHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personreid.personReIDHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  index_.MergeFrom(from.index_);
}

void personReIDHistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personreid.personReIDHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void personReIDHistoryResponse::CopyFrom(const personReIDHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personreid.personReIDHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool personReIDHistoryResponse::IsInitialized() const {
  return true;
}

void personReIDHistoryResponse::Swap(personReIDHistoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void personReIDHistoryResponse::InternalSwap(personReIDHistoryResponse* other) {
  using std::swap;
  index_.InternalSwap(&other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata personReIDHistoryResponse::GetMetadata() const {
  protobuf_PersonReIDAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PersonReIDAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace personreid
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::personreid::personReIDUploadRequest* Arena::CreateMaybeMessage< ::personreid::personReIDUploadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::personreid::personReIDUploadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::personreid::personReIDUploadResponse* Arena::CreateMaybeMessage< ::personreid::personReIDUploadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::personreid::personReIDUploadResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::personreid::personReIDRealtimeRequest* Arena::CreateMaybeMessage< ::personreid::personReIDRealtimeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::personreid::personReIDRealtimeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::personreid::personReIDRealtimeResponse* Arena::CreateMaybeMessage< ::personreid::personReIDRealtimeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::personreid::personReIDRealtimeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::personreid::personReIDHistoryRequest* Arena::CreateMaybeMessage< ::personreid::personReIDHistoryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::personreid::personReIDHistoryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::personreid::personReIDHistoryResponse* Arena::CreateMaybeMessage< ::personreid::personReIDHistoryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::personreid::personReIDHistoryResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
