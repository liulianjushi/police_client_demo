// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FaceEmogDetectAPI.proto

#ifndef PROTOBUF_INCLUDED_FaceEmogDetectAPI_2eproto
#define PROTOBUF_INCLUDED_FaceEmogDetectAPI_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_FaceEmogDetectAPI_2eproto 

namespace protobuf_FaceEmogDetectAPI_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_FaceEmogDetectAPI_2eproto
namespace faceemodetect {
class faceEmogDetectRequest;
class faceEmogDetectRequestDefaultTypeInternal;
extern faceEmogDetectRequestDefaultTypeInternal _faceEmogDetectRequest_default_instance_;
class faceEmogDetectResponse;
class faceEmogDetectResponseDefaultTypeInternal;
extern faceEmogDetectResponseDefaultTypeInternal _faceEmogDetectResponse_default_instance_;
}  // namespace faceemodetect
namespace google {
namespace protobuf {
template<> ::faceemodetect::faceEmogDetectRequest* Arena::CreateMaybeMessage<::faceemodetect::faceEmogDetectRequest>(Arena*);
template<> ::faceemodetect::faceEmogDetectResponse* Arena::CreateMaybeMessage<::faceemodetect::faceEmogDetectResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace faceemodetect {

// ===================================================================

class faceEmogDetectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faceemodetect.faceEmogDetectRequest) */ {
 public:
  faceEmogDetectRequest();
  virtual ~faceEmogDetectRequest();

  faceEmogDetectRequest(const faceEmogDetectRequest& from);

  inline faceEmogDetectRequest& operator=(const faceEmogDetectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  faceEmogDetectRequest(faceEmogDetectRequest&& from) noexcept
    : faceEmogDetectRequest() {
    *this = ::std::move(from);
  }

  inline faceEmogDetectRequest& operator=(faceEmogDetectRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const faceEmogDetectRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const faceEmogDetectRequest* internal_default_instance() {
    return reinterpret_cast<const faceEmogDetectRequest*>(
               &_faceEmogDetectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(faceEmogDetectRequest* other);
  friend void swap(faceEmogDetectRequest& a, faceEmogDetectRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline faceEmogDetectRequest* New() const final {
    return CreateMaybeMessage<faceEmogDetectRequest>(NULL);
  }

  faceEmogDetectRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<faceEmogDetectRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const faceEmogDetectRequest& from);
  void MergeFrom(const faceEmogDetectRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(faceEmogDetectRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes rawData = 2;
  void clear_rawdata();
  static const int kRawDataFieldNumber = 2;
  const ::std::string& rawdata() const;
  void set_rawdata(const ::std::string& value);
  #if LANG_CXX11
  void set_rawdata(::std::string&& value);
  #endif
  void set_rawdata(const char* value);
  void set_rawdata(const void* value, size_t size);
  ::std::string* mutable_rawdata();
  ::std::string* release_rawdata();
  void set_allocated_rawdata(::std::string* rawdata);

  // bool isEmo = 1;
  void clear_isemo();
  static const int kIsEmoFieldNumber = 1;
  bool isemo() const;
  void set_isemo(bool value);

  // int32 Width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 Hight = 4;
  void clear_hight();
  static const int kHightFieldNumber = 4;
  ::google::protobuf::int32 hight() const;
  void set_hight(::google::protobuf::int32 value);

  // int32 Channel = 5;
  void clear_channel();
  static const int kChannelFieldNumber = 5;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:faceemodetect.faceEmogDetectRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr rawdata_;
  bool isemo_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 hight_;
  ::google::protobuf::int32 channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FaceEmogDetectAPI_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class faceEmogDetectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faceemodetect.faceEmogDetectResponse) */ {
 public:
  faceEmogDetectResponse();
  virtual ~faceEmogDetectResponse();

  faceEmogDetectResponse(const faceEmogDetectResponse& from);

  inline faceEmogDetectResponse& operator=(const faceEmogDetectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  faceEmogDetectResponse(faceEmogDetectResponse&& from) noexcept
    : faceEmogDetectResponse() {
    *this = ::std::move(from);
  }

  inline faceEmogDetectResponse& operator=(faceEmogDetectResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const faceEmogDetectResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const faceEmogDetectResponse* internal_default_instance() {
    return reinterpret_cast<const faceEmogDetectResponse*>(
               &_faceEmogDetectResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(faceEmogDetectResponse* other);
  friend void swap(faceEmogDetectResponse& a, faceEmogDetectResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline faceEmogDetectResponse* New() const final {
    return CreateMaybeMessage<faceEmogDetectResponse>(NULL);
  }

  faceEmogDetectResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<faceEmogDetectResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const faceEmogDetectResponse& from);
  void MergeFrom(const faceEmogDetectResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(faceEmogDetectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common.BoundingBox faceRect = 1;
  int facerect_size() const;
  void clear_facerect();
  static const int kFaceRectFieldNumber = 1;
  ::common::BoundingBox* mutable_facerect(int index);
  ::google::protobuf::RepeatedPtrField< ::common::BoundingBox >*
      mutable_facerect();
  const ::common::BoundingBox& facerect(int index) const;
  ::common::BoundingBox* add_facerect();
  const ::google::protobuf::RepeatedPtrField< ::common::BoundingBox >&
      facerect() const;

  // repeated int32 status = 2;
  int status_size() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status(int index) const;
  void set_status(int index, ::google::protobuf::int32 value);
  void add_status(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      status() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_status();

  // @@protoc_insertion_point(class_scope:faceemodetect.faceEmogDetectResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::common::BoundingBox > facerect_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > status_;
  mutable int _status_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FaceEmogDetectAPI_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// faceEmogDetectRequest

// bool isEmo = 1;
inline void faceEmogDetectRequest::clear_isemo() {
  isemo_ = false;
}
inline bool faceEmogDetectRequest::isemo() const {
  // @@protoc_insertion_point(field_get:faceemodetect.faceEmogDetectRequest.isEmo)
  return isemo_;
}
inline void faceEmogDetectRequest::set_isemo(bool value) {
  
  isemo_ = value;
  // @@protoc_insertion_point(field_set:faceemodetect.faceEmogDetectRequest.isEmo)
}

// bytes rawData = 2;
inline void faceEmogDetectRequest::clear_rawdata() {
  rawdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& faceEmogDetectRequest::rawdata() const {
  // @@protoc_insertion_point(field_get:faceemodetect.faceEmogDetectRequest.rawData)
  return rawdata_.GetNoArena();
}
inline void faceEmogDetectRequest::set_rawdata(const ::std::string& value) {
  
  rawdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faceemodetect.faceEmogDetectRequest.rawData)
}
#if LANG_CXX11
inline void faceEmogDetectRequest::set_rawdata(::std::string&& value) {
  
  rawdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:faceemodetect.faceEmogDetectRequest.rawData)
}
#endif
inline void faceEmogDetectRequest::set_rawdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rawdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faceemodetect.faceEmogDetectRequest.rawData)
}
inline void faceEmogDetectRequest::set_rawdata(const void* value, size_t size) {
  
  rawdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faceemodetect.faceEmogDetectRequest.rawData)
}
inline ::std::string* faceEmogDetectRequest::mutable_rawdata() {
  
  // @@protoc_insertion_point(field_mutable:faceemodetect.faceEmogDetectRequest.rawData)
  return rawdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* faceEmogDetectRequest::release_rawdata() {
  // @@protoc_insertion_point(field_release:faceemodetect.faceEmogDetectRequest.rawData)
  
  return rawdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void faceEmogDetectRequest::set_allocated_rawdata(::std::string* rawdata) {
  if (rawdata != NULL) {
    
  } else {
    
  }
  rawdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rawdata);
  // @@protoc_insertion_point(field_set_allocated:faceemodetect.faceEmogDetectRequest.rawData)
}

// int32 Width = 3;
inline void faceEmogDetectRequest::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 faceEmogDetectRequest::width() const {
  // @@protoc_insertion_point(field_get:faceemodetect.faceEmogDetectRequest.Width)
  return width_;
}
inline void faceEmogDetectRequest::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:faceemodetect.faceEmogDetectRequest.Width)
}

// int32 Hight = 4;
inline void faceEmogDetectRequest::clear_hight() {
  hight_ = 0;
}
inline ::google::protobuf::int32 faceEmogDetectRequest::hight() const {
  // @@protoc_insertion_point(field_get:faceemodetect.faceEmogDetectRequest.Hight)
  return hight_;
}
inline void faceEmogDetectRequest::set_hight(::google::protobuf::int32 value) {
  
  hight_ = value;
  // @@protoc_insertion_point(field_set:faceemodetect.faceEmogDetectRequest.Hight)
}

// int32 Channel = 5;
inline void faceEmogDetectRequest::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 faceEmogDetectRequest::channel() const {
  // @@protoc_insertion_point(field_get:faceemodetect.faceEmogDetectRequest.Channel)
  return channel_;
}
inline void faceEmogDetectRequest::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:faceemodetect.faceEmogDetectRequest.Channel)
}

// -------------------------------------------------------------------

// faceEmogDetectResponse

// repeated .common.BoundingBox faceRect = 1;
inline int faceEmogDetectResponse::facerect_size() const {
  return facerect_.size();
}
inline ::common::BoundingBox* faceEmogDetectResponse::mutable_facerect(int index) {
  // @@protoc_insertion_point(field_mutable:faceemodetect.faceEmogDetectResponse.faceRect)
  return facerect_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::common::BoundingBox >*
faceEmogDetectResponse::mutable_facerect() {
  // @@protoc_insertion_point(field_mutable_list:faceemodetect.faceEmogDetectResponse.faceRect)
  return &facerect_;
}
inline const ::common::BoundingBox& faceEmogDetectResponse::facerect(int index) const {
  // @@protoc_insertion_point(field_get:faceemodetect.faceEmogDetectResponse.faceRect)
  return facerect_.Get(index);
}
inline ::common::BoundingBox* faceEmogDetectResponse::add_facerect() {
  // @@protoc_insertion_point(field_add:faceemodetect.faceEmogDetectResponse.faceRect)
  return facerect_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::common::BoundingBox >&
faceEmogDetectResponse::facerect() const {
  // @@protoc_insertion_point(field_list:faceemodetect.faceEmogDetectResponse.faceRect)
  return facerect_;
}

// repeated int32 status = 2;
inline int faceEmogDetectResponse::status_size() const {
  return status_.size();
}
inline void faceEmogDetectResponse::clear_status() {
  status_.Clear();
}
inline ::google::protobuf::int32 faceEmogDetectResponse::status(int index) const {
  // @@protoc_insertion_point(field_get:faceemodetect.faceEmogDetectResponse.status)
  return status_.Get(index);
}
inline void faceEmogDetectResponse::set_status(int index, ::google::protobuf::int32 value) {
  status_.Set(index, value);
  // @@protoc_insertion_point(field_set:faceemodetect.faceEmogDetectResponse.status)
}
inline void faceEmogDetectResponse::add_status(::google::protobuf::int32 value) {
  status_.Add(value);
  // @@protoc_insertion_point(field_add:faceemodetect.faceEmogDetectResponse.status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
faceEmogDetectResponse::status() const {
  // @@protoc_insertion_point(field_list:faceemodetect.faceEmogDetectResponse.status)
  return status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
faceEmogDetectResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable_list:faceemodetect.faceEmogDetectResponse.status)
  return &status_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace faceemodetect

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_FaceEmogDetectAPI_2eproto
