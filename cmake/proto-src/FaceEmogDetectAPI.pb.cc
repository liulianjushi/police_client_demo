// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FaceEmogDetectAPI.proto

#include "FaceEmogDetectAPI.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoundingBox;
}  // namespace protobuf_common_2eproto
namespace faceemodetect {
class faceEmogDetectRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<faceEmogDetectRequest>
      _instance;
} _faceEmogDetectRequest_default_instance_;
class faceEmogDetectResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<faceEmogDetectResponse>
      _instance;
} _faceEmogDetectResponse_default_instance_;
}  // namespace faceemodetect
namespace protobuf_FaceEmogDetectAPI_2eproto {
static void InitDefaultsfaceEmogDetectRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::faceemodetect::_faceEmogDetectRequest_default_instance_;
    new (ptr) ::faceemodetect::faceEmogDetectRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::faceemodetect::faceEmogDetectRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_faceEmogDetectRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfaceEmogDetectRequest}, {}};

static void InitDefaultsfaceEmogDetectResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::faceemodetect::_faceEmogDetectResponse_default_instance_;
    new (ptr) ::faceemodetect::faceEmogDetectResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::faceemodetect::faceEmogDetectResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_faceEmogDetectResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsfaceEmogDetectResponse}, {
      &protobuf_common_2eproto::scc_info_BoundingBox.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_faceEmogDetectRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_faceEmogDetectResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::faceemodetect::faceEmogDetectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::faceemodetect::faceEmogDetectRequest, isemo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::faceemodetect::faceEmogDetectRequest, rawdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::faceemodetect::faceEmogDetectRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::faceemodetect::faceEmogDetectRequest, hight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::faceemodetect::faceEmogDetectRequest, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::faceemodetect::faceEmogDetectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::faceemodetect::faceEmogDetectResponse, facerect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::faceemodetect::faceEmogDetectResponse, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::faceemodetect::faceEmogDetectRequest)},
  { 10, -1, sizeof(::faceemodetect::faceEmogDetectResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::faceemodetect::_faceEmogDetectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::faceemodetect::_faceEmogDetectResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FaceEmogDetectAPI.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027FaceEmogDetectAPI.proto\022\rfaceemodetect"
      "\032\014common.proto\"f\n\025faceEmogDetectRequest\022"
      "\r\n\005isEmo\030\001 \001(\010\022\017\n\007rawData\030\002 \001(\014\022\r\n\005Width"
      "\030\003 \001(\005\022\r\n\005Hight\030\004 \001(\005\022\017\n\007Channel\030\005 \001(\005\"O"
      "\n\026faceEmogDetectResponse\022%\n\010faceRect\030\001 \003"
      "(\0132\023.common.BoundingBox\022\016\n\006status\030\002 \003(\0052"
      "t\n\021FaceEmogDetectAPI\022_\n\016faceEmogDetect\022$"
      ".faceemodetect.faceEmogDetectRequest\032%.f"
      "aceemodetect.faceEmogDetectResponse\"\000b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 365);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FaceEmogDetectAPI.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FaceEmogDetectAPI_2eproto
namespace faceemodetect {

// ===================================================================

void faceEmogDetectRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int faceEmogDetectRequest::kIsEmoFieldNumber;
const int faceEmogDetectRequest::kRawDataFieldNumber;
const int faceEmogDetectRequest::kWidthFieldNumber;
const int faceEmogDetectRequest::kHightFieldNumber;
const int faceEmogDetectRequest::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

faceEmogDetectRequest::faceEmogDetectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FaceEmogDetectAPI_2eproto::scc_info_faceEmogDetectRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:faceemodetect.faceEmogDetectRequest)
}
faceEmogDetectRequest::faceEmogDetectRequest(const faceEmogDetectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rawdata().size() > 0) {
    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  ::memcpy(&isemo_, &from.isemo_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&isemo_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:faceemodetect.faceEmogDetectRequest)
}

void faceEmogDetectRequest::SharedCtor() {
  rawdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isemo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&isemo_)) + sizeof(channel_));
}

faceEmogDetectRequest::~faceEmogDetectRequest() {
  // @@protoc_insertion_point(destructor:faceemodetect.faceEmogDetectRequest)
  SharedDtor();
}

void faceEmogDetectRequest::SharedDtor() {
  rawdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void faceEmogDetectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* faceEmogDetectRequest::descriptor() {
  ::protobuf_FaceEmogDetectAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceEmogDetectAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const faceEmogDetectRequest& faceEmogDetectRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FaceEmogDetectAPI_2eproto::scc_info_faceEmogDetectRequest.base);
  return *internal_default_instance();
}


void faceEmogDetectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:faceemodetect.faceEmogDetectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rawdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isemo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&isemo_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool faceEmogDetectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faceemodetect.faceEmogDetectRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isEmo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isemo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes rawData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rawdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faceemodetect.faceEmogDetectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faceemodetect.faceEmogDetectRequest)
  return false;
#undef DO_
}

void faceEmogDetectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faceemodetect.faceEmogDetectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isEmo = 1;
  if (this->isemo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isemo(), output);
  }

  // bytes rawData = 2;
  if (this->rawdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->rawdata(), output);
  }

  // int32 Width = 3;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // int32 Hight = 4;
  if (this->hight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hight(), output);
  }

  // int32 Channel = 5;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:faceemodetect.faceEmogDetectRequest)
}

::google::protobuf::uint8* faceEmogDetectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:faceemodetect.faceEmogDetectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isEmo = 1;
  if (this->isemo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isemo(), target);
  }

  // bytes rawData = 2;
  if (this->rawdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->rawdata(), target);
  }

  // int32 Width = 3;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // int32 Hight = 4;
  if (this->hight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hight(), target);
  }

  // int32 Channel = 5;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:faceemodetect.faceEmogDetectRequest)
  return target;
}

size_t faceEmogDetectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:faceemodetect.faceEmogDetectRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes rawData = 2;
  if (this->rawdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rawdata());
  }

  // bool isEmo = 1;
  if (this->isemo() != 0) {
    total_size += 1 + 1;
  }

  // int32 Width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 Hight = 4;
  if (this->hight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hight());
  }

  // int32 Channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void faceEmogDetectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faceemodetect.faceEmogDetectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const faceEmogDetectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const faceEmogDetectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faceemodetect.faceEmogDetectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faceemodetect.faceEmogDetectRequest)
    MergeFrom(*source);
  }
}

void faceEmogDetectRequest::MergeFrom(const faceEmogDetectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faceemodetect.faceEmogDetectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rawdata().size() > 0) {

    rawdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rawdata_);
  }
  if (from.isemo() != 0) {
    set_isemo(from.isemo());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.hight() != 0) {
    set_hight(from.hight());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void faceEmogDetectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faceemodetect.faceEmogDetectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void faceEmogDetectRequest::CopyFrom(const faceEmogDetectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faceemodetect.faceEmogDetectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool faceEmogDetectRequest::IsInitialized() const {
  return true;
}

void faceEmogDetectRequest::Swap(faceEmogDetectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void faceEmogDetectRequest::InternalSwap(faceEmogDetectRequest* other) {
  using std::swap;
  rawdata_.Swap(&other->rawdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(isemo_, other->isemo_);
  swap(width_, other->width_);
  swap(hight_, other->hight_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata faceEmogDetectRequest::GetMetadata() const {
  protobuf_FaceEmogDetectAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceEmogDetectAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void faceEmogDetectResponse::InitAsDefaultInstance() {
}
void faceEmogDetectResponse::clear_facerect() {
  facerect_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int faceEmogDetectResponse::kFaceRectFieldNumber;
const int faceEmogDetectResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

faceEmogDetectResponse::faceEmogDetectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FaceEmogDetectAPI_2eproto::scc_info_faceEmogDetectResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:faceemodetect.faceEmogDetectResponse)
}
faceEmogDetectResponse::faceEmogDetectResponse(const faceEmogDetectResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      facerect_(from.facerect_),
      status_(from.status_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:faceemodetect.faceEmogDetectResponse)
}

void faceEmogDetectResponse::SharedCtor() {
}

faceEmogDetectResponse::~faceEmogDetectResponse() {
  // @@protoc_insertion_point(destructor:faceemodetect.faceEmogDetectResponse)
  SharedDtor();
}

void faceEmogDetectResponse::SharedDtor() {
}

void faceEmogDetectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* faceEmogDetectResponse::descriptor() {
  ::protobuf_FaceEmogDetectAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceEmogDetectAPI_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const faceEmogDetectResponse& faceEmogDetectResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FaceEmogDetectAPI_2eproto::scc_info_faceEmogDetectResponse.base);
  return *internal_default_instance();
}


void faceEmogDetectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:faceemodetect.faceEmogDetectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  facerect_.Clear();
  status_.Clear();
  _internal_metadata_.Clear();
}

bool faceEmogDetectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faceemodetect.faceEmogDetectResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common.BoundingBox faceRect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_facerect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_status())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_status())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faceemodetect.faceEmogDetectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faceemodetect.faceEmogDetectResponse)
  return false;
#undef DO_
}

void faceEmogDetectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faceemodetect.faceEmogDetectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.BoundingBox faceRect = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->facerect_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->facerect(static_cast<int>(i)),
      output);
  }

  // repeated int32 status = 2;
  if (this->status_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _status_cached_byte_size_));
  }
  for (int i = 0, n = this->status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->status(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:faceemodetect.faceEmogDetectResponse)
}

::google::protobuf::uint8* faceEmogDetectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:faceemodetect.faceEmogDetectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.BoundingBox faceRect = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->facerect_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->facerect(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 status = 2;
  if (this->status_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _status_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->status_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:faceemodetect.faceEmogDetectResponse)
  return target;
}

size_t faceEmogDetectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:faceemodetect.faceEmogDetectResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.BoundingBox faceRect = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->facerect_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->facerect(static_cast<int>(i)));
    }
  }

  // repeated int32 status = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->status_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _status_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void faceEmogDetectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faceemodetect.faceEmogDetectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const faceEmogDetectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const faceEmogDetectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faceemodetect.faceEmogDetectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faceemodetect.faceEmogDetectResponse)
    MergeFrom(*source);
  }
}

void faceEmogDetectResponse::MergeFrom(const faceEmogDetectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faceemodetect.faceEmogDetectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  facerect_.MergeFrom(from.facerect_);
  status_.MergeFrom(from.status_);
}

void faceEmogDetectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faceemodetect.faceEmogDetectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void faceEmogDetectResponse::CopyFrom(const faceEmogDetectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faceemodetect.faceEmogDetectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool faceEmogDetectResponse::IsInitialized() const {
  return true;
}

void faceEmogDetectResponse::Swap(faceEmogDetectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void faceEmogDetectResponse::InternalSwap(faceEmogDetectResponse* other) {
  using std::swap;
  CastToBase(&facerect_)->InternalSwap(CastToBase(&other->facerect_));
  status_.InternalSwap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata faceEmogDetectResponse::GetMetadata() const {
  protobuf_FaceEmogDetectAPI_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FaceEmogDetectAPI_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace faceemodetect
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::faceemodetect::faceEmogDetectRequest* Arena::CreateMaybeMessage< ::faceemodetect::faceEmogDetectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::faceemodetect::faceEmogDetectRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::faceemodetect::faceEmogDetectResponse* Arena::CreateMaybeMessage< ::faceemodetect::faceEmogDetectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::faceemodetect::faceEmogDetectResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
